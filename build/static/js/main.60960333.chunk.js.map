{"version":3,"sources":["utils/index.js","components/Status/index.js","components/History/index.js","containers/Options/index.js","store/actions.js","store/constants.js","components/Shortcut/index.js","components/Panel/index.js","containers/ConnectedPanel/index.js","components/Pellet/index.js","containers/App/index.js","serviceWorker.js","store/reducer.js","store/index.js","index.js","colors.scss"],"names":["getColorFromStatus","status","colors","yellow","green","red","getDarkenColor","col","amt","arguments","length","undefined","usePound","slice","num","parseInt","r","b","g","toString","Status","deploymentStatus","this","props","styles","linearColorPrimary","backgroundColor","linearBarColorPrimary","Styled","withStyles","classes","react_default","a","createElement","className","Avatar_default","src","deployer","img","LinearProgress_default","variant","colorPrimary","barColorPrimary","hash","commit","Component","CustomTableHead","root","color","fontWeight","TableHead","CustomTableCell","TableCell","CustomLink","marginTop","display","textAlign","Link","success","progress","deploys","Table_default","table","TableRow_default","TableCell_default","colSpan","align","TableBody_default","map","deploy","key","name","date","Chip_default","label","style","background","href","Options","_this","_this$props","notifications","pellet","Switch_default","checked","onClick","dispatch","type","value","flow","connect","state","ShortCut","Panel","currentDeploy","components_Status","components_History","containers_Options","Shortcut","ConnectedPanel","components_Panel","Pellet","Object","assign","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","isOpen","window","addEventListener","handleKeyEvent","bind","removeEventListener","event","keyCode","setState","_this2","Drawer_default","anchor","open","onClose","containers_ConnectedPanel","components_Pellet","Boolean","location","hostname","match","action","objectSpread","notification","store","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","ReactDOM","render","es","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.60960333.chunk.js","sourcesContent":["import colors from '../colors.scss';\n\nexport const getColorFromStatus = status => {\n  switch (status) {\n    case 'ongoing':\n      return colors.yellow\n    case 'done':\n      return colors.green\n    case 'failed':\n      return colors.red\n    default:\n  }\n}\n\nexport const getDarkenColor = (col, amt = -80) => {\n  let usePound = false;\n\n  if (col[0] === \"#\") {\n      col = col.slice(1);\n      usePound = true;\n  }\n\n  const num = parseInt(col,16);\n  let r = (num >> 16) + amt;\n\n  if (r > 255) r = 255;\n  else if  (r < 0) r = 0;\n\n  let b = ((num >> 8) & 0x00FF) + amt;\n\n  if (b > 255) b = 255;\n  else if  (b < 0) b = 0;\n\n  let g = (num & 0x0000FF) + amt;\n\n  if (g > 255) g = 255;\n  else if (g < 0) g = 0;\n\n  return (usePound ? \"#\" : \"\") + (g | (b << 8) | (r << 16)).toString(16);\n\n}","import React, { Component } from 'react'\n\nimport { getColorFromStatus, getDarkenColor } from '../../utils'\nimport Avatar from '@material-ui/core/Avatar';\nimport { withStyles } from '@material-ui/core/styles';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\nimport './style.css';\n\nclass Status extends Component {\n  render () {\n    const { deploymentStatus } = this.props;\n\n    const styles = ({\n      linearColorPrimary: {\n        backgroundColor: getColorFromStatus(deploymentStatus.status)\n      },\n      linearBarColorPrimary: {\n        backgroundColor: getDarkenColor(getColorFromStatus(deploymentStatus.status), -20)\n      },\n    });\n\n    const component = props => {\n      const { classes } = props;\n      return (\n        <section>\n          <header className=\"header\">current deployment status</header>\n          <div className=\"Status-wrapper\">\n            <Avatar\n              className=\"Status-avatar\"\n              src={deploymentStatus.deployer.img}\n            />\n            <div className=\"Status-contentWrapper\">\n              <LinearProgress\n                className=\"Status-loadingBar\"\n                variant={deploymentStatus.status !== 'ongoing' ? 'determinate' : 'indeterminate'}\n                classes={{\n                  colorPrimary: classes.linearColorPrimary,\n                  barColorPrimary: classes.linearBarColorPrimary,\n                }}\n              />\n              <div>\n                <div className=\"Status-hash\">\n                  <span className=\"Status-label\">HASH</span>\n                  <span className=\"Status-field\">{ deploymentStatus.hash }</span>\n                </div>\n                <div>\n                  <span className=\"Status-label\">commit</span>\n                  <span className=\"Status-field\">{ deploymentStatus.commit }</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      )\n    }\n\n    const Styled = withStyles(styles)(component)\n\n    return <Styled />\n  }\n}\n\nexport default Status;\n","import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport Table from '@material-ui/core/Table';\nimport Link from '@material-ui/core/Link';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport { getDarkenColor, getColorFromStatus } from '../../utils'\n\nimport './style.css';\n\nconst styles = ({\n  success: {\n    color: 'green',\n  },\n  progress: {\n    color: 'yellow',\n  },\n});\n\nconst CustomTableHead = withStyles({\n  root: {\n    color: '#93939f',\n    fontWeight: 'bold',\n  },\n})(TableHead);\n\nconst CustomTableCell = withStyles({\n  root: {\n    color: '#93939f',\n  },\n})(TableCell);\n\nconst CustomLink = withStyles({\n  root: {\n    marginTop: '1.5rem',\n    color: '#6abdd7',\n    display: 'block',\n    textAlign: 'center',\n  },\n})(Link);\n\nfunction History(props) {\n  const { classes, deploys } = props;\n\n  return (\n    <section>\n      <Table className={classes.table}>\n        <CustomTableHead className=\"header History-head\">\n          <TableRow>\n            <TableCell colSpan=\"2\">developer</TableCell>\n            <TableCell>date</TableCell>\n            <TableCell align=\"right\">status</TableCell>\n          </TableRow>\n        </CustomTableHead>\n        <TableBody>\n          {deploys.map(deploy => (\n          <TableRow key={deploy.hash}>\n            <CustomTableCell>\n              <Avatar\n                className=\"History--avatar\"\n                src={deploy.deployer.img}\n              />\n            </CustomTableCell>\n            <CustomTableCell align=\"left\">\n              {deploy.deployer.name}\n            </CustomTableCell>\n            <CustomTableCell align=\"left\">\n              <strong>\n                {deploy.date}\n              </strong>\n            </CustomTableCell>\n            <CustomTableCell align=\"right\">\n              <Chip\n                className=\"History-Chip\"\n                label={deploy.status}\n                style={{\n                  background: getColorFromStatus(deploy.status),\n                  color: getDarkenColor(getColorFromStatus(deploy.status))\n                }}\n              />\n            </CustomTableCell>\n          </TableRow>\n          ))}\n        </TableBody>\n      </Table>\n      <CustomLink href='/foo'>\n        See more\n      </CustomLink>\n    </section>\n  );\n}\n\nexport default withStyles(styles)(History);\n","import React, { Component } from 'react'\nimport { flow } from 'lodash'\nimport { connect } from 'react-redux'\n\nimport {\n  toggleNotification,\n  togglePellet\n} from '../../store/actions'\nimport Switch from '@material-ui/core/Switch'\nimport './style.css'\n\nclass Options extends Component {\n  render () {\n    const { notifications, pellet } = this.props\n    return (\n      <div>\n        <header className=\"header\">\n          Options\n        </header>\n        <div className=\"Options-wrapper\">\n          <div>\n            <Switch\n              checked={notifications}\n              onClick={() => this.props.dispatch(toggleNotification())}\n              value=\"checkedA\"\n            />\n            <span className=\"Options-label\">Desktop Notifications</span>\n          </div>\n          <div>\n            <Switch\n              checked={pellet}\n              onClick={() => this.props.dispatch(togglePellet())}\n              value=\"checkedB\"\n              color=\"primary\"\n            />\n            <span className=\"Options-label\">Display Pellet</span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    notifications: state.notifications,\n    pellet: state.pellet,\n  }\n}\n\nexport default flow(connect(mapStateToProps))(Options)\n","import {\n  GET_DEPLOYS,\n  TOGGLE_NOTIFICATIONS,\n  TOGGLE_PELLET,\n} from './constants'\n\nexport const toggleNotification = () => {\n  return { type: TOGGLE_NOTIFICATIONS }\n}\n\nexport const togglePellet = () => {\n  return { type: TOGGLE_PELLET }\n}\n\nexport const getDeploys = () => {\n  return {\n    type: GET_DEPLOYS,\n    deploys: [\n      {\n        status: 'ongoing',\n        deployer: {\n          img: 'https://randomuser.me/api/portraits/women/65.jpg',\n          name: 'blaadje',\n        },\n        date: 'October 13, 2014 11:13:00',\n        hash: '1ca08d613db8558fefbc3fsefioujn8876fd3b7d',\n        commit: 'prefeat(welove): Delete code from home page'\n      },\n      {\n        status: 'done',\n        deployer: {\n          img: 'https://randomuser.me/api/portraits/men/61.jpg',\n          name: 'Trapdafifou',\n        },\n        date: 'October 13, 2014 11:13:00',\n        hash: '1ca08d613db8558fefbc3fcd988876seoifdjed',\n        commit: 'prefeat(welove): Delete code from home page'\n      },\n      {\n        status: 'done',\n        deployer: {\n          img: 'https://randomuser.me/api/portraits/women/45.jpg',\n          name: 'Clement',\n        },\n        date: 'October 13, 2014 11:13:00',\n        hash: '1ca08d613db8558fefed3seidfuh988876fd3b7d',\n        commit: 'prefeat(welove): Delete code from home page'\n      },\n      {\n        status: 'done',\n        deployer: {\n          img: 'https://randomuser.me/api/portraits/women/95.jpg',\n          name: 'Marc',\n        },\n        date: 'October 13, 2014 11:13:00',\n        hash: '1ca08d613db8558fefsedoij988876fd3b7d',\n        commit: 'prefeat(welove): Delete code from home page'\n      },\n    ],\n  }\n}","export const GET_DEPLOYS = 'application/GET_DEPLOYS'\nexport const TOGGLE_NOTIFICATIONS = 'application/TOGGLE_NOTIFICATIONS'\nexport const TOGGLE_PELLET = 'application/TOGGLE_PELLET'","import React, { Component } from 'react'\n\nimport './style.css';\n\nclass ShortCut extends Component {\n  render () {\n    return (\n      <div>\n        <header className=\"header\">\n          ShortCut\n        </header>\n        <div className=\"ShortCut-wrapper\">\n          <div>\n            <strong>Open Panel</strong>\n            <div className=\"ShortCut-list\">\n              <span>image</span>\n              <span>Command + K</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ShortCut;\n","import React from 'react';\n\nimport Status from '../Status'\nimport History from '../History'\nimport Options from '../../containers/Options'\n\nimport './style.css';\nimport ShortCut from '../Shortcut';\n\nfunction Panel (props) {\n  const { currentDeploy, deploys } = props\n  return (\n    <aside>\n      <Status\n        deploymentStatus={currentDeploy}\n      />\n      <div className=\"Panel-margin\" >\n        <History deploys={deploys}/>\n      </div>\n      <div className=\"Panel-margin\" >\n        <Options />\n      </div>\n      <div className=\"Panel-margin\" >\n        <ShortCut />\n      </div>\n    </aside>\n  );\n}\n\nexport default Panel;\n","import React, { Component } from 'react'\nimport { flow } from 'lodash'\nimport { connect } from 'react-redux'\n\nimport Panel from '../../components/Panel'\n\nclass ConnectedPanel extends Component {\n  render () {\n    const { deploys, currentDeploy } = this.props\n\n    return (\n      (deploys.length && currentDeploy) && <Panel\n        currentDeploy={currentDeploy}\n        deploys={deploys}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    currentDeploy: state.currentDeploy,\n    deploys: state.deploys,\n  }\n}\n\nexport default flow(connect(mapStateToProps))(ConnectedPanel)\n","import React, { Component } from 'react'\nimport './style.css'\nimport { getColorFromStatus } from '../../utils'\n\nclass Pellet extends Component {\n  render () {\n    return (\n      <div\n        {...this.props}\n        className=\"Pellet-wrapper\"\n      >\n        <div className=\"Pellet-arrowWrapper\">\n          <div className=\"Pellet-arrow\" />\n        </div>\n        <div className=\"Pellet-pelletWrapper\">\n          <div\n            style={{ background: getColorFromStatus(this.props.status) }}\n            className=\"Pellet-pellet\"\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Pellet\n","import React, { Component } from 'react'\nimport { flow } from 'lodash'\nimport { connect } from 'react-redux'\nimport Drawer from '@material-ui/core/Drawer'\nimport { getDeploys } from '../../store/actions'\n\nimport ConnectedPanel from '../../containers/ConnectedPanel'\nimport Pellet from '../../components/Pellet'\n\nimport './style.css'\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      isOpen: false,\n    }\n  }\n\n  componentWillMount () {\n    this.props.dispatch(getDeploys())\n    window.addEventListener('keydown', this.handleKeyEvent.bind(this))\n  }\n\n  componentWillUnmount () {\n    window.removeEventListener('keydown', this.handleKeyEvent.bind(this))\n  }\n\n  handleKeyEvent (event) {\n    if (event.keyCode !== 75) {\n      return\n    }\n\n    this.setState({ isOpen: !this.state.isOpen })\n  }\n\n  render () {\n    const { pellet, currentDeploy } = this.props\n\n    return (\n      <main className=\"App\">\n        <Drawer\n          anchor=\"right\"\n          open={this.state.isOpen}\n          onClose={() => this.setState({ isOpen: false })}\n        >\n          <ConnectedPanel onClick={() => this.setState({ isOpen: !this.state.isOpen })} />\n        </Drawer>\n        {pellet &&\n          <Pellet\n            status={currentDeploy.status}\n            onClick={() => this.setState({ isOpen: true })}\n          />\n        }\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    pellet: state.pellet,\n    currentDeploy: state.currentDeploy,\n  }\n}\n\nexport default flow(connect(mapStateToProps))(App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  GET_DEPLOYS,\n  TOGGLE_NOTIFICATIONS,\n  TOGGLE_PELLET\n} from './constants'\n\nconst deploys = (state, action) => {\n  switch (action.type) {\n    case GET_DEPLOYS:\n      return {\n        ...state,\n        deploys: action.deploys,\n        currentDeploy: action.deploys[0],\n      }\n    case TOGGLE_NOTIFICATIONS:\n      return {\n        ...state,\n        notification: !state.notification\n      }\n    case TOGGLE_PELLET:\n      return {\n        ...state,\n        pellet: !state.pellet\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default deploys","import { createStore } from 'redux'\nimport reducer from './reducer'\n\nconst initialState = {\n  currentDeploy: {},\n  deploys: [],\n  notification: false,\n  pellet: true,\n}\n\nconst store = createStore(\n  reducer,\n  initialState,\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__(),\n)\n\nexport default store\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store'\n\nimport './index.css';\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('stacey'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"#ed7161\",\"green\":\"#a4f1a7\",\"yellow\":\"#f9dc93\"};"],"sourceRoot":""}